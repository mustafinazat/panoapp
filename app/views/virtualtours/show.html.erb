         <% breadcrumb :virtualtour, @virtualtour %>
<div class="row">
  <div class="col-8 col-sm-8 col-md-10 col-lg-10">
    <h3 class="mt-4 mb-3"><%= title @virtualtour.title %></h3></div>

  <% if policy(@virtualtour).update? %>
      <div class="col-2 col-sm-2 col-md-1 col-lg-1 col-xl-1 align-items-baseline">

        <%= link_to edit_virtualtour_path(@virtualtour) , class: 'btn btn-info' do %>

            <i class="fa fa-edit"></i>
        <% end %>
      </div>
      <div class="col-2 col-sm-2 col-md-1 col-lg-1 col-xl-1 align-items-baseline">
        <%= link_to virtualtour_path, method: :delete , class: 'btn btn-danger' do %>
            <i class="fa fa-remove"></i>
        <% end %>

      </div>
  <% end %>

  <div class="col-md-9 col-lg-9" style="height:60vh;" >
          <div id="virtualtour-container">
    </div>

  </div>

  <div class=" col-md-3 col-lg-3">
    <br>
      <div class="d-flex justify-content-between">
        <small> <i class="fa fa-user-o" aria-hidden="true"> </i> <%= link_to @virtualtour.user.nickname, @virtualtour.user %></small>
        <small> <i class="fa fa-calendar" aria-hidden="true"> </i> <%= @virtualtour.created_at.strftime( "%d.%m.%Y")%></small>
      </div>
      <hr>
      <%= raw @virtualtour.tags.map(&:name).map{ |t| link_to "#"+ t, tag_path(t), class: 'badge badge-primary' }.join(' ') %>


      <hr>

      <p>
        <%= @virtualtour.description %>
      </p>

    </div>
</div>

<%= javascript_include_tag "three.min" %>
<%= javascript_include_tag "panolens.min"%>


        <%= javascript_tag do %>


    PANOLENS.Panorama.prototype.link = function ( pano, position, imageScale, imageSrc , text) {
        var scope = this, spot, scale, img;
        this.visible = true;
        if ( !position ) {
            console.warn( 'Please specify infospot position for linking' );
            return;
        }

        // Infospot scale
        if ( imageScale !== undefined ) {

            scale = imageScale;

        } else if ( pano.linkingImageScale !== undefined ) {

            scale = pano.linkingImageScale;

        } else {

            scale = 300;

        }


        // Infospot image
        if ( imageSrc ) {

            img = imageSrc

        } else if ( pano.linkingImageURL ) {

            img = pano.linkingImageURL;

        } else {

            img = PANOLENS.DataImage.Arrow;

        }

        // Creates a new infospot
        spot = new PANOLENS.Infospot( scale, img );
        spot.position.copy( position );
        spot.addHoverText(text);
        spot.toPanorama = pano;
        spot.addEventListener( 'click', function () {
            scope.dispatchEvent( { type : 'panolens-viewer-handler', method: 'setPanorama', data: pano } );

        } );


              virtualtourtourContainer.addEventListener( 'click', function () {
spot.element.style.display ="block";
spot.element._width = spot.element.clientWidth;
spot.element._height = spot.element.clientHeight;

        }, false );


              virtualtourtourContainer.addEventListener( 'touchstart', function () {
spot.element.style.display ="block";
spot.element._width = spot.element.clientWidth;
spot.element._height = spot.element.clientHeight;

        }, false );
        


        this.linkedSpots.push( spot );

        this.add( spot );

        this.visible = false;

    };








 var virtualtourtourContainer;
 virtualtourtourContainer = document.getElementById( 'virtualtour-container' );
   var  viewer = new PANOLENS.Viewer({ container: virtualtourtourContainer, autoHideInfospot: false});

   <% unless @panoramas.empty? %>
  <% @panoramas.each_with_index do |pic,index| %>
var panorama<%= index+1 %>;
     panorama<%= index+1 %> = new PANOLENS.ImagePanorama( "<%= pic.image.url %>");
     viewer.add(panorama<%= index+1 %>);
     
<% end %>
<% end %>

  <% unless @connections.empty? %>
  <% @connections.each do |connection| %>
       panorama<%= connection.split(';')[0].strip %>.link(panorama<%= connection.split(';')[3].strip %>, new THREE.Vector3( <%= connection.split(';')[1] %> ), 400, PANOLENS.DataImage.Arrow, "<%= connection.split(';')[2] %>" );
    
<% end %>
<% end %>
<% end %>



